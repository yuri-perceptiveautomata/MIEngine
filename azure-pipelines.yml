name: $(Date:yyyMMdd).$(Rev:r)
pr:
- 'main'
stages:
- stage: Windows
  dependsOn: []
  jobs:
  - job: Debug
    pool: 'Hosted Windows 2019 with VS2019'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: '$(Build.SourcesDirectory)\src\.nuget\NuGet.config'
    - task: MSBuild@1
      inputs:
        solution: '$(Build.SourcesDirectory)\src\MIDebugEngine.sln'
        configuration: 'Debug'
    - task: VSTest@2
      inputs:
        testAssemblyVer2: |
          $(Build.SourcesDirectory)\bin\Debug\MICoreUnitTests.dll
          $(Build.SourcesDirectory)\bin\Debug\JDbgUnitTests.dll
          $(Build.SourcesDirectory)\bin\Debug\SSHDebugTests.dll
        failOnMinTestsNotRun: true
        minimumExpectedTests: '1'

  - job: Release
    pool: 'Hosted Windows 2019 with VS2019'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: '$(Build.SourcesDirectory)\src\.nuget\NuGet.config'
    - task: MSBuild@1
      inputs:
        solution: '$(Build.SourcesDirectory)\src\MIDebugEngine.sln'
        configuration: 'Release'
    - task: VSTest@2
      inputs:
        testAssemblyVer2: |
          $(Build.SourcesDirectory)\bin\Release\MICoreUnitTests.dll
          $(Build.SourcesDirectory)\bin\Release\JDbgUnitTests.dll
          $(Build.SourcesDirectory)\bin\Release\SSHDebugTests.dll
        failOnMinTestsNotRun: true
        minimumExpectedTests: '1'

  - job: LabRelease
    pool: 'Hosted Windows 2019 with VS2019'
    variables:
      TEST_LAB_BUILD: 'true'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: '$(Build.SourcesDirectory)\src\.nuget\NuGet.config'
    - task: MSBuild@1
      inputs:
        solution: '$(Build.SourcesDirectory)\src\MIDebugEngine.sln'
        configuration: 'Lab.Release'

  - job: LabDebug
    pool: 'Hosted Windows 2019 with VS2019'
    variables:
      TEST_LAB_BUILD: 'true'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        feedsToUse: 'config'
        nugetConfigPath: '$(Build.SourcesDirectory)\src\.nuget\NuGet.config'
    - task: MSBuild@1
      inputs:
        solution: '$(Build.SourcesDirectory)\src\MIDebugEngine.sln'
        configuration: 'Lab.Debug'

- stage: Linux
  dependsOn: []
  jobs:
  - job: Debug
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
    - task: DotNetCoreCLI@2
      inputs:
        projects: |
          $(Build.SourcesDirectory)/src/MIDebugEngine-Unix.sln
        arguments: '-c Debug'
    - script: |
        sudo apt-get install gdb g++ -y
        which g++
        which gdb
        echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
        # TODO: Try to make core dumps work
        # echo 1 | sudo tee /proc/sys/kernel/core_uses_pid
        # ulimit -S -c unlimited
        # sudo sysctl -w kernel.core_pattern=$(Build.SourcesDirectory)/core.%e
    - script: |
        dotnet publish $(Build.SourcesDirectory)/src/OpenDebugAD7/OpenDebugAD7.csproj -c Debug -r linux-x64 --self-contained
        mkdir -p $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/extension/debugAdapters
        cp -r  $(Build.SourcesDirectory)/bin/Debug/vscode/linux-x64/publish/* $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/extension/debugAdapters/.
        cp $(Build.SourcesDirectory)/bin/Debug/vscode/Microsoft.MIDebugEngine.dll $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/extension/debugAdapters/.
        cp $(Build.SourcesDirectory)/bin/Debug/vscode/Microsoft.MICore.dll $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/extension/debugAdapters/.
        cp $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/CppTests/TestConfigurations/config_gdb.xml $(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/CppTests/config.xml
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        arguments: '$(Build.SourcesDirectory)/bin/DebugAdapterProtocolTests/Debug/CppTests/CppTests.dll'

  - job: Release
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
    - task: DotNetCoreCLI@2
      inputs:
        projects: |
          $(Build.SourcesDirectory)/src/MIDebugEngine-Unix.sln
        arguments: '-c Release'

- stage: OSX
  dependsOn: []
  jobs:
  - job: Debug
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
    - task: DotNetCoreCLI@2
      inputs:
        projects: |
          $(Build.SourcesDirectory)/src/MIDebugEngine-Unix.sln
        arguments: '-c Debug'

  - job: Release
    pool:
      vmImage: 'macOS-latest'
    steps:
    - task: NuGetToolInstaller@1
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 5.x
    - task: DotNetCoreCLI@2
      inputs:
        projects: |
          $(Build.SourcesDirectory)/src/MIDebugEngine-Unix.sln
        arguments: '-c Release'